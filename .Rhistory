vertex.frame.color="black",vertex.label.color="black",frame=TRUE,vertex.label.dist=0,
vertex.label.cex=1, edge.curved=0.2,edge.label=leyendas)
title(paste("Núcleo familiar de",direccion), sub = "Copyright © 2018 UNALMED",
cex.main = 1.5,   font.main= 4, col.main= "black",
cex.sub = 0.75, font.sub = 3, col.sub = "red")
dev.off()
}
FamNet(6000002)
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
coorgraph<-c()
leyendas<-c()
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-graph(coorgraph)
plot(g1,edge.width=2,edge.arrow.size=0,edge.color="gray",edge.label.font=3,edge.lty="solid",
vertex.color="pink",vertex.shape=c("square","circle"),
vertex.size=20,vertex.label.font=4,
vertex.frame.color="black",vertex.label.color="black",frame=TRUE,vertex.label.dist=0,
vertex.label.cex=1, edge.curved=0.2,edge.label=leyendas)
title(paste("Núcleo familiar de",direccion), sub = "Copyright © 2018 UNALMED",
cex.main = 1.5,   font.main= 4, col.main= "black",
cex.sub = 0.75, font.sub = 3, col.sub = "red")
}
g1
g1<-network(g1)
g1<-network(g1,directed=FALSE)
g1<-network(c(1,2,2,3,3,1))
net = rgraph(10, mode = "graph", tprob = 0.5)
str(net)
net
net<-network(net)
ggnet2(net)
ggnet2(net,edge.label=leyendas)
m <- matrix(0, 4, 4)
m
m[1,2]<-1
m
m<-network(m)
ggnet2(m)
m[2,1]<-1
ggnet2(m)
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
coorgraph<-c()
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(coorgraph,directed=TRUE)
ggnet2(g1,edge.size=1)
}
FamNet(6000002)
View(HogaresMadresSolteras)
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==6000002)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
m
m[1,1]<-1
m
m[4,4]<-1
m
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1)
}
FamNet(6000002)
View(transitoria)
?ggnet2
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="black", label.color=white,size=12, edge.label="leyendas")
}
FamNet(6000002)
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="black", label.color="white",size=12, edge.label="leyendas")
}
FamNet(6000002)
dev.copy2pdf()
dev.copy(png, file = "geyserplot.png")
dev.off(9)
dev.off()
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="pink",size=12, edge.label="leyendas", )
}
FamNet(6000002)
dev.off()
dev.copy(pdf)
?dev
dev.set(pdf)
?dev.set
windows(width = 7, height = 7, pointsize = 12,
record = getOption("graphics.record"),
rescale = c("R", "fit", "fixed"), xpinch, ypinch,
bg = "transparent", canvas = "white",
gamma = getOption("gamma"), xpos = NA, ypos = NA,
buffered = getOption("windowsBuffered"))
?windows
?cairo
library(Cairo)
?Cairo
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
Cairo(600, 600, file="plot.png", type="png", bg="white")
ggnet2(g1,edge.size=1, label=TRUE, color="pink",size=12, edge.label="leyendas")
}
FamNet(6000002)
dev.off()
dev
?dev
??Dev
a<-seq(1:10,1)
a<-seq(1:10)
b<-seq(1:10)
x<-lm(a~b)
x
summary(x)
install.packages("devtools")
devtools::install_github('RLesur/Rcade')
Rcade::games$Mariohtml5
rm(list=ls())
rm(list=ls())
library(dplyr)
library(Hmisc)
library(lubridate)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub("\\.", "", db$TRM)
db$TRM=as.numeric(gsub("\\,", ".", db$TRM))
db<-cbind2(db,month(db$Fecha))
db<-cbind2(db,weekdays(db$Fecha))
names(db)[4]<-"mes"
#Creación de dataframe por meses
dbmeses<-db%>%group_by(Mes=floor_date(Fecha,"month"))%>%summarize(Unidades=sum(Unidades),TRM=mean(TRM))
dbmeses$Mes<-as.Date(dbmeses$Mes)
attach(db)
dbmeses<-db%>%group_by(Mes=floor_date(Fecha,"month"))%>%summarize(Unidades=sum(Unidades),TRM=mean(TRM))
dbmeses$Mes<-as.Date(dbmeses$Mes)
View(db)
rm(list=ls())
library(dplyr)
library(Hmisc)
library(lubridate)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub("\\.", "", db$TRM)
db$TRM=as.numeric(gsub("\\,", ".", db$TRM))
dbmeses<-db%>%group_by(Mes=floor_date(Fecha,"month"))%>%summarize(Unidades=sum(Unidades),TRM=mean(TRM))
dbmeses$Mes<-as.Date(dbmeses$Mes)
View(db)
View(db)
str(db$Fecha)
dbmeses<-db%>%group_by(Mes=floor_date(Fecha,"month"))%>%summarise(Unidades=sum(Unidades),TRM=mean(TRM))
View(db)
rm(list=ls())
library(dplyr)
library(Hmisc)
library(lubridate)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub("\\.", "", db$TRM)
db$TRM=as.numeric(gsub("\\,", ".", db$TRM))
db<-cbind2(db,month(db$Fecha))
db<-cbind2(db,weekdays(db$Fecha))
names(db)[4]<-"mes"
#Creación de dataframe por meses
attach(db)
dbmeses<-db%>%group_by(Mes=floor_date(Fecha,"month"))%>%summarise(Unidades=sum(Unidades),TRM=mean(TRM))
dbmeses$Mes<-as.Date(dbmeses$Mes)
googleaux<-read.csv2("multiTimeline (1).csv",header=T,sep=",")
dbmeses<-cbind2(dbmeses,googleaux$carro...Colombia.)
names(dbmeses)[2]<-"uni"
names(dbmeses)[4]<-"pop"
names(dbmeses)[1]<-"mes"
#Incluir popularidad en el dataframe por día
vpop<-rep(dbmeses$pop[1],monthDays(dbmeses$mes[1]))
for (i in 2:nrow(dbmeses)){
auxpop<-rep(dbmeses$pop[i],monthDays(dbmeses$mes[i]))
vpop<-append(vpop,auxpop)
}
db<-cbind2(db,vpop)
names(db)[6]<-"pop"
empleoaux<-read.csv2("Empleo_desempleo.csv",header=FALSE)
View(empleoaux)
View(empleoaux)
names(empleoaux)[1]<-"fecha"
names(empleoaux)[2]<-"templeo"
names(empleoaux)[3]<-"tdesem"
View(empleoaux)
db$Fecha <- as.Date(db$Fecha, format = "%Y/%m")
View(db)
rm(list=ls())
library(dplyr)
library(Hmisc)
library(lubridate)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub("\\.", "", db$TRM)
db$TRM=as.numeric(gsub("\\,", ".", db$TRM))
db<-cbind2(db,month(db$Fecha))
db<-cbind2(db,weekdays(db$Fecha))
names(db)[4]<-"mes"
#Creación de dataframe por meses
attach(db)
dbmeses<-db%>%group_by(Mes=floor_date(Fecha,"month"))%>%summarise(Unidades=sum(Unidades),TRM=mean(TRM))
dbmeses$Mes<-as.Date(dbmeses$Mes)
googleaux<-read.csv2("multiTimeline (1).csv",header=T,sep=",")
dbmeses<-cbind2(dbmeses,googleaux$carro...Colombia.)
names(dbmeses)[2]<-"uni"
names(dbmeses)[4]<-"pop"
names(dbmeses)[1]<-"mes"
#Incluir popularidad en el dataframe por día
vpop<-rep(dbmeses$pop[1],monthDays(dbmeses$mes[1]))
for (i in 2:nrow(dbmeses)){
auxpop<-rep(dbmeses$pop[i],monthDays(dbmeses$mes[i]))
vpop<-append(vpop,auxpop)
}
db<-cbind2(db,vpop)
names(db)[6]<-"pop"
empleoaux<-read.csv2("Empleo_desempleo.csv",header=FALSE)
names(empleoaux)[1]<-"fecha"
names(empleoaux)[2]<-"templeo"
names(empleoaux)[3]<-"tdesem"
View(empleoaux)
empleoaux$fecha <- as.Date(empleoaux$fecha, format = "%Y/%m")
View(empleoaux)
rm(list=ls())
library(dplyr)
library(Hmisc)
library(lubridate)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub("\\.", "", db$TRM)
db$TRM=as.numeric(gsub("\\,", ".", db$TRM))
db<-cbind2(db,month(db$Fecha))
db<-cbind2(db,weekdays(db$Fecha))
names(db)[4]<-"mes"
#Creación de dataframe por meses
attach(db)
dbmeses<-db%>%group_by(Mes=floor_date(Fecha,"month"))%>%summarise(Unidades=sum(Unidades),TRM=mean(TRM))
dbmeses$Mes<-as.Date(dbmeses$Mes)
googleaux<-read.csv2("multiTimeline (1).csv",header=T,sep=",")
dbmeses<-cbind2(dbmeses,googleaux$carro...Colombia.)
names(dbmeses)[2]<-"uni"
names(dbmeses)[4]<-"pop"
names(dbmeses)[1]<-"mes"
#Incluir popularidad en el dataframe por día
vpop<-rep(dbmeses$pop[1],monthDays(dbmeses$mes[1]))
for (i in 2:nrow(dbmeses)){
auxpop<-rep(dbmeses$pop[i],monthDays(dbmeses$mes[i]))
vpop<-append(vpop,auxpop)
}
db<-cbind2(db,vpop)
names(db)[6]<-"pop"
empleoaux<-read.csv2("Empleo_desempleo.csv",header=FALSE)
names(empleoaux)[1]<-"fecha"
names(empleoaux)[2]<-"templeo"
names(empleoaux)[3]<-"tdesem"
str(empleoaux)
empleoaux<-read.csv2("Empleo_desempleo.csv",header=FALSE,stringsAsFactors = FALSE)
empleoaux$fecha <- as.Date(empleoaux$fecha, format = "%Y/%m")
str(empleoaux)
empleoaux$fecha <- as.Date(empleoaux$fecha, format = "%Y-%m")
View(empleoaux)
empleoaux$fecha<-as.Date(paste(empleoaux$fecha,1,sep="-"),"%Y-%m-%d")
View(empleoaux)
names(empleoaux)[1]<-"fecha"
names(empleoaux)[2]<-"templeo"
names(empleoaux)[3]<-"tdesem"
rm(list=ls())
library(dplyr)
library(Hmisc)
library(lubridate)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub("\\.", "", db$TRM)
db$TRM=as.numeric(gsub("\\,", ".", db$TRM))
db<-cbind2(db,month(db$Fecha))
db<-cbind2(db,weekdays(db$Fecha))
names(db)[4]<-"mes"
#Creación de dataframe por meses
attach(db)
dbmeses<-db%>%group_by(Mes=floor_date(Fecha,"month"))%>%summarise(Unidades=sum(Unidades),TRM=mean(TRM))
dbmeses$Mes<-as.Date(dbmeses$Mes)
googleaux<-read.csv2("multiTimeline (1).csv",header=T,sep=",")
dbmeses<-cbind2(dbmeses,googleaux$carro...Colombia.)
names(dbmeses)[2]<-"uni"
names(dbmeses)[4]<-"pop"
names(dbmeses)[1]<-"mes"
#Incluir popularidad en el dataframe por día
vpop<-rep(dbmeses$pop[1],monthDays(dbmeses$mes[1]))
for (i in 2:nrow(dbmeses)){
auxpop<-rep(dbmeses$pop[i],monthDays(dbmeses$mes[i]))
vpop<-append(vpop,auxpop)
}
db<-cbind2(db,vpop)
names(db)[6]<-"pop"
empleoaux<-read.csv2("Empleo_desempleo.csv",header=FALSE,stringsAsFactors = FALSE)
names(empleoaux)[1]<-"fecha"
names(empleoaux)[2]<-"templeo"
names(empleoaux)[3]<-"tdesem"
empleoaux$fecha<-as.Date(paste(empleoaux$fecha,1,sep="-"),"%Y-%m-%d")
View(empleoaux)
str(empleoaux)
empleoaux[order(empleoaux$fecha),]
empleoaux<-empleoaux[order(empleoaux$fecha),]
View(empleoaux)
