plot(z, p2)
points(v, p1)
plot(z, p2)
points(v, p1,col="green",pch=16)
set.seed(666) #Fijando la semilla
v = runif(30, min = 4, max = 6) #Generando los números aleatorios
z = runif(30, min = 4, max = 6) #Generando los números aleatorios
p1 = -0.5*(v - 5.6)^2 + 8.5
p2 = -0.52*(z - 5.4)^2 + 8.6
plot(z, p2)
points(v, p1,col="green",pch=16)
set.seed(666) #Fijando la semilla
v = runif(30, min = 4, max = 6) #Generando los números aleatorios
z = runif(30, min = 4, max = 6) #Generando los números aleatorios
p1 = -0.5*(v - 5.6)^2 + 8.5
p2 = -0.52*(z - 5.4)^2 + 8.6
plot(z, p2,pch=16)
points(v, p1,col="green",pch=16)
set.seed(666) #Fijando la semilla
v = runif(30, min = 4, max = 6) #Generando los números aleatorios
z = runif(30, min = 4, max = 6) #Generando los números aleatorios
p1 = -0.5*(v - 5.6)^2 + 8.5
p2 = -0.52*(z - 5.4)^2 + 8.6
plot(z, p2,pch=16)
points(v, p1,col="green",pch=16)
plot(z, p2,pch=16)
points(v, p1,col="green",pch=16)
install.packages("tinytex")
install.packages("rmarkdown")
install.packages("devtools")
library(devtools)
install.version("rmarkdown",version=1.8)
unlink('D:/Desktop/001_cache', recursive = TRUE)
library(openintro)
install.packages("openintro")
library(openintro)
data(hsb2)
hsb2
data(hsb2)
hsb2
data(hsb2)
hsb2
View(hsb2)
hsb2
a<-hsb2
data(hsb2)
install.packages("dplyr")
ventas_vs_gastofinanciero<-read.csv("ventas_vs_gastofinanciero.csv",sep=";",
encoding="UTF-8").
ventas_vs_gastofinanciero<-read.csv(file.choose(),sep=";",encoding="UTF-8")
View(ventas_vs_gastofinanciero)
sectores<-as.data.frame(table(ventas_vs_gastofinanciero$SUBSECTOR))
names(sectores)<-c("subsector","cant_clientes")
ids<-ventas_vs_gastofinanciero$SUBSECTOR %in% c("EDIFICACIONES","COMERCIO DE VARIEDADES Y VESTUARIO")
datos_dos_subsectores<-ventas_vs_gastofinanciero[ids,]
colores<-ifelse(datos_dos_subsectores$SUBSECTOR=="EDIFICACIONES",1,2)
datos_dos_subsectores_trs<-datos_dos_subsectores
datos_dos_subsectores_trs$VENTAS<-log(datos_dos_subsectores_trs$VENTAS/10e8)
datos_dos_subsectores_trs$GASTOFINANCIERO<-log(datos_dos_subsectores_trs$GASTOFINANCIERO/10e8)
modelo_ed_1<-lm(GASTOFINANCIERO~VENTAS,data=datos_dos_subsectores_trs,
subset=(SUBSECTOR=="EDIFICACIONES"))
aux1<-resid(modelo_ed_1)
aux1
sd(aux1)
SD2<-2*sd(aux1)
SD2<-2*sd(aux1)
SD2
sale<-ifelse(abs(aux1)>SD2, 1, 0)
plot(aux1, col=red, pch=16)
plot(aux1, col="red", pch=16)
plot(aux1, col=aux1+1, pch=16)
plot(aux1, col=sale+1, pch=16)
modelo_ed_1
load("D:/Documents/UNAL/Semestre VIII/Técnicas en aprendizaje estadístico/Trabajo 1/Bases de datos/.RData")
View(servhaux)
View(ComposicionHogar)
View(servhaux)
shiny::runApp('D:/Documents/GitHub/madresSolteras/ShinyApp')
View(total)
View(HogaresMadresSolteras)
g1<-graph(c(1,2,2,3,3,1))
library(ggplot2)
ggnet2(g1)
library(GGally)
library(sna)
library(network)
library(tidyverse)
ggnet2(g1)
plotcord <- data.frame(layout.fruchterman.reingold(g1))
colnames(plotcord) = c("X1","X2")
#get edges, which are pairs of node IDs
edgelist <- get.edgelist(g)
#convert to a four column edge data frame with source and destination coordinates
edges <- data.frame(plotcord[edgelist[,1],], plotcord[edgelist[,2],])
colnames(edges) <- c("X1","Y1","X2","Y2")
ggplot() + geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2), data=edges, size = 0.5, colour="grey") + geom_point(aes(X1, X2), data=plotcord)
plotcord <- data.frame(layout.fruchterman.reingold(g1))
colnames(plotcord) = c("X1","X2")
#get edges, which are pairs of node IDs
edgelist <- get.edgelist(g1)
#convert to a four column edge data frame with source and destination coordinates
edges <- data.frame(plotcord[edgelist[,1],], plotcord[edgelist[,2],])
colnames(edges) <- c("X1","Y1","X2","Y2")
ggplot() + geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2), data=edges, size = 0.5, colour="grey") + geom_point(aes(X1, X2), data=plotcord)
ggnet2(g1)
plot(g1)
ggnet2(g1)
plotcord <- data.frame(layout.fruchterman.reingold(g1))
colnames(plotcord) = c("X1","X2")
#get edges, which are pairs of node IDs
edgelist <- get.edgelist(g1)
#convert to a four column edge data frame with source and destination coordinates
edges <- data.frame(plotcord[edgelist[,1],], plotcord[edgelist[,2],])
colnames(edges) <- c("X1","Y1","X2","Y2")
ggplot() + geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2), data=edges, size = 0.5, colour="grey") + geom_point(aes(X1, X2), data=plotcord)
ggplot() + geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2), data=edges, size = 0.5, colour="grey") + geom_point(aes(X1, X2), data=plotcord)
ggplot() + geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2), data=edges, size = 0.5, colour="grey") + geom_point(aes(X1, X2), data=plotcord)
install.packages("MetamapsDB")
library(MetamapsDB)
install.packages("GenomicRanges")
library(MetamapsDB)
install.packages("MetamapsDB")
library(MetamapsDB)
ig2ggplot(g1, dfOnly = TRUE, labels = FALSE, metab = TRUE, ...)
FamNet(6000002)
install.packages("Cairo")
library(Cairo)
Cairo(file="Cairo_PNG_72_dpi_x_2.png",
type="png",
units="in",
width=5*2,
height=4*2,
pointsize=12*2,
dpi=72)
my_sc_plot(data)
dev.off()
Cairo(file="Cairo_PNG_72_dpi_x_2.png",
type="png",
units="in",
width=5*2,
height=4*2,
pointsize=12*2,
dpi=72)
my_sc_plot(total)
dev.off()
?my_sc_plot
??my_sc_plot
Cairo(file="Cairo_PNG_72_dpi_x_2.png",
type="png",
units="in",
width=5*2,
height=4*2,
pointsize=12*2,
dpi=72)
dev.off()
png(filename="simple_graphic.png", dpi=72) # perhaps width/height as well
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
coorgraph<-c()
leyendas<-c()
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-graph(coorgraph)
png(filename="simple_graphic.png", dpi=72) # perhaps width/height as well
plot(g1,edge.width=2,edge.arrow.size=0,edge.color="gray",edge.label.font=3,edge.lty="solid",
vertex.color="pink",vertex.shape=c("square","circle"),
vertex.size=20,vertex.label.font=4,
vertex.frame.color="black",vertex.label.color="black",frame=TRUE,vertex.label.dist=0,
vertex.label.cex=1, edge.curved=0.2,edge.label=leyendas)
title(paste("Núcleo familiar de",direccion), sub = "Copyright © 2018 UNALMED",
cex.main = 1.5,   font.main= 4, col.main= "black",
cex.sub = 0.75, font.sub = 3, col.sub = "red")
dev.off()
}
FamNet(6000002)
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
coorgraph<-c()
leyendas<-c()
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-graph(coorgraph)
plot(g1,edge.width=2,edge.arrow.size=0,edge.color="gray",edge.label.font=3,edge.lty="solid",
vertex.color="pink",vertex.shape=c("square","circle"),
vertex.size=20,vertex.label.font=4,
vertex.frame.color="black",vertex.label.color="black",frame=TRUE,vertex.label.dist=0,
vertex.label.cex=1, edge.curved=0.2,edge.label=leyendas)
title(paste("Núcleo familiar de",direccion), sub = "Copyright © 2018 UNALMED",
cex.main = 1.5,   font.main= 4, col.main= "black",
cex.sub = 0.75, font.sub = 3, col.sub = "red")
}
g1
g1<-network(g1)
g1<-network(g1,directed=FALSE)
g1<-network(c(1,2,2,3,3,1))
net = rgraph(10, mode = "graph", tprob = 0.5)
str(net)
net
net<-network(net)
ggnet2(net)
ggnet2(net,edge.label=leyendas)
m <- matrix(0, 4, 4)
m
m[1,2]<-1
m
m<-network(m)
ggnet2(m)
m[2,1]<-1
ggnet2(m)
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
coorgraph<-c()
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(coorgraph,directed=TRUE)
ggnet2(g1,edge.size=1)
}
FamNet(6000002)
View(HogaresMadresSolteras)
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==6000002)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
m
m[1,1]<-1
m
m[4,4]<-1
m
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1)
}
FamNet(6000002)
View(transitoria)
?ggnet2
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="black", label.color=white,size=12, edge.label="leyendas")
}
FamNet(6000002)
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="black", label.color="white",size=12, edge.label="leyendas")
}
FamNet(6000002)
dev.copy2pdf()
dev.copy(png, file = "geyserplot.png")
dev.off(9)
dev.off()
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="pink",size=12, edge.label="leyendas", )
}
FamNet(6000002)
dev.off()
dev.copy(pdf)
?dev
dev.set(pdf)
?dev.set
windows(width = 7, height = 7, pointsize = 12,
record = getOption("graphics.record"),
rescale = c("R", "fit", "fixed"), xpinch, ypinch,
bg = "transparent", canvas = "white",
gamma = getOption("gamma"), xpos = NA, ypos = NA,
buffered = getOption("windowsBuffered"))
?windows
?cairo
library(Cairo)
?Cairo
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
Cairo(600, 600, file="plot.png", type="png", bg="white")
ggnet2(g1,edge.size=1, label=TRUE, color="pink",size=12, edge.label="leyendas")
}
FamNet(6000002)
dev.off()
dev
?dev
??Dev
rm(list=ls())
library(dplyr)
library(lubridate)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub("\\.", "", db$TRM)
db$TRM=as.numeric(gsub("\\,", ".", db$TRM))
dbmeses<-db%>% group_by(Mes=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades),TRM=mean(TRM))
dbmeses$Mes<-as.Date(dbmeses$Mes)
googleaux<-read.csv2("multiTimeline (1).csv",header=T,sep=",")
dbmeses<-cbind2(dbmeses,googleaux$carro...Colombia.)
names(dbmeses)[2]<-"uni"
names(dbmeses)[4]<-"pop"
names(dbmeses)[1]<-"mes"
attach(dbmeses)
plot(mes,TRM,type="l",lwd=2)
plot(mes,uni,type="l",col="red",lwd=2)
plot(mes,TRM,type="l",lwd=2)
