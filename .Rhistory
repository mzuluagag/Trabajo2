if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
coorgraph<-append(coorgraph,c(transitoria$ORDEN[j],transitoria$ORDEN[k]))
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-graph(coorgraph)
plot(g1,edge.width=2,edge.arrow.size=0,edge.color="gray",edge.label.font=3,edge.lty="solid",
vertex.color="pink",vertex.shape=c("square","circle"),
vertex.size=20,vertex.label.font=4,
vertex.frame.color="black",vertex.label.color="black",frame=TRUE,vertex.label.dist=0,
vertex.label.cex=1, edge.curved=0.2,edge.label=leyendas)
title(paste("Núcleo familiar de",direccion), sub = "Copyright © 2018 UNALMED",
cex.main = 1.5,   font.main= 4, col.main= "black",
cex.sub = 0.75, font.sub = 3, col.sub = "red")
}
g1
g1<-network(g1)
g1<-network(g1,directed=FALSE)
g1<-network(c(1,2,2,3,3,1))
net = rgraph(10, mode = "graph", tprob = 0.5)
str(net)
net
net<-network(net)
ggnet2(net)
ggnet2(net,edge.label=leyendas)
m <- matrix(0, 4, 4)
m
m[1,2]<-1
m
m<-network(m)
ggnet2(m)
m[2,1]<-1
ggnet2(m)
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
coorgraph<-c()
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(coorgraph,directed=TRUE)
ggnet2(g1,edge.size=1)
}
FamNet(6000002)
View(HogaresMadresSolteras)
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==6000002)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
m
m[1,1]<-1
m
m[4,4]<-1
m
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1)
}
FamNet(6000002)
View(transitoria)
?ggnet2
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="black", label.color=white,size=12, edge.label="leyendas")
}
FamNet(6000002)
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="black", label.color="white",size=12, edge.label="leyendas")
}
FamNet(6000002)
dev.copy2pdf()
dev.copy(png, file = "geyserplot.png")
dev.off(9)
dev.off()
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
ggnet2(g1,edge.size=1, label=TRUE, color="pink",size=12, edge.label="leyendas", )
}
FamNet(6000002)
dev.off()
dev.copy(pdf)
?dev
dev.set(pdf)
?dev.set
windows(width = 7, height = 7, pointsize = 12,
record = getOption("graphics.record"),
rescale = c("R", "fit", "fixed"), xpinch, ypinch,
bg = "transparent", canvas = "white",
gamma = getOption("gamma"), xpos = NA, ypos = NA,
buffered = getOption("windowsBuffered"))
?windows
?cairo
library(Cairo)
?Cairo
FamNet<-function(direccion){
transitoria<-data.frame(HogaresMadresSolteras)
transitoria<-subset(transitoria,HogaresMadresSolteras$DIRECTORIO==direccion)
leyendas<-c()
m<-matrix(0,nrow(transitoria),nrow(transitoria))
for (j in 1:nrow(transitoria)){
for (k in 1:nrow(transitoria)){
if (transitoria$P6083[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6083S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es madre de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6071[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6071S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es cónyuge de",transitoria$ORDEN[k])))
}
}
if (transitoria$P6081[k]==1){
if(transitoria$ORDEN[j]==transitoria$P6081S1[k]){
m[j,k]<-1
m[k,j]<-1
leyendas<-append(leyendas,c(paste(transitoria$ORDEN[j],"es padre de",transitoria$ORDEN[k])))
}
}
}
}
g1<-network(m,directed=TRUE)
Cairo(600, 600, file="plot.png", type="png", bg="white")
ggnet2(g1,edge.size=1, label=TRUE, color="pink",size=12, edge.label="leyendas")
}
FamNet(6000002)
dev.off()
dev
?dev
??Dev
aux<-read.csv2(file.choose(),header=T,sep=",")
View(aux)
aux<-read.csv2(file.choose(),header=T,sep=",")
aux<-read.csv2(file.choose(),header=T,sep=";")
attach(aux)
plot(Unidades,TRM)
str(aux)
aux$Fecha<-as.date(aux$Fecha)
?as.Date
aux$Fecha<-as.Date(aux$Fecha)
aux<-read.csv2(file.choose(),header=T,sep=";")
aux<-read.csv2(file.choose(),header=T,sep=";")
aux<-read.csv2(file.choose(),header=T,sep=";")
s4 <- sum(sep2014$Unidades)
setwd("D:/Documents/GitHub/madresSolteras")
db <- read.csv2("Autos TRM.csv",header = TRUE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
sep2012 <- db[which(format(db$Fecha, "%Y") == 2012),]
sep2013 <- db[which(format(db$Fecha, "%Y") == 2013),]
sep2014 <- db[which(format(db$Fecha, "%Y") == 2014),]
sep2015 <- db[which(format(db$Fecha, "%Y") == 2015),]
sep2016 <- db[which(format(db$Fecha, "%Y") == 2016),]
sep2017 <- db[which(format(db$Fecha, "%Y") == 2017),]
s2 <- sum(sep2012$Unidades)
s3 <- sum(sep2013$Unidades)
s4 <- sum(sep2014$Unidades)
s5 <- sum(sep2015$Unidades)
s6 <- sum(sep2016$Unidades)
s7 <- sum(sep2017$Unidades)
barplot(height = c(s2,s3,s4,s5,s6,s7),names.arg = c("2012","2013","2014","2015","2016","2017"),
main = "Número de carros registrados",xlab = "Año",ylab="Cantidad")
s2
s3
s4
s5
s6
s7
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
sep2012 <- db[which(format(db$Fecha, "%Y") == 2012),]
sep2013 <- db[which(format(db$Fecha, "%Y") == 2013),]
sep2014 <- db[which(format(db$Fecha, "%Y") == 2014),]
sep2015 <- db[which(format(db$Fecha, "%Y") == 2015),]
sep2016 <- db[which(format(db$Fecha, "%Y") == 2016),]
sep2017 <- db[which(format(db$Fecha, "%Y") == 2017),]
s2 <- sum(sep2012$Unidades)
s3 <- sum(sep2013$Unidades)
s4 <- sum(sep2014$Unidades)
s5 <- sum(sep2015$Unidades)
s6 <- sum(sep2016$Unidades)
s7 <- sum(sep2017$Unidades)
barplot(height = c(s2,s3,s4,s5,s6,s7),names.arg = c("2012","2013","2014","2015","2016","2017"),
main = "Número de carros registrados",xlab = "Año",ylab="Cantidad")
s2
s3
s4
s5
s6
s7
View(sep2012)
View(sep2013)
View(sep2014)
View(sep2015)
View(sep2012)
attach(sep2012)
s2-s7
(s2-s7)/s2
abline(s7)
abline(s7)
str(s7)
abline(as.numeric(s7))
plot(1)
abline(1)
?abline
abline(1,1)
abline(1,2)
abline(1,0)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y") #Formating the date
sep2012 <- db[which(format(db$Fecha, "%Y") == 2012),]
sep2013 <- db[which(format(db$Fecha, "%Y") == 2013),]
sep2014 <- db[which(format(db$Fecha, "%Y") == 2014),]
sep2015 <- db[which(format(db$Fecha, "%Y") == 2015),]
sep2016 <- db[which(format(db$Fecha, "%Y") == 2016),]
sep2017 <- db[which(format(db$Fecha, "%Y") == 2017),]
s2 <- sum(sep2012$Unidades)
s3 <- sum(sep2013$Unidades)
s4 <- sum(sep2014$Unidades)
s5 <- sum(sep2015$Unidades)
s6 <- sum(sep2016$Unidades)
s7 <- sum(sep2017$Unidades)
barplot(height = c(s2,s3,s4,s5,s6,s7),names.arg = c("2012","2013","2014","2015","2016","2017"),
main = "Número de carros registrados",xlab = "Año",ylab="Cantidad")
s2
s3
s4
s5
s6
s7
abline(s7,0)
plot(TRM)
lines(TRM)
plot(TRM,xlim=c(1500,2284))
plot(TRM)
str(db)
db$TRM<-as.numeric(db$TRM)
plot(TRM)
plot(TRM)
plot(Fecha,TRM)
db$TRM[1]
db$TRM[2]
db$TRM[3]
db$TRM[4]
View(db)
$ 1.942,70
1.942,70
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
View(db)
?dollar
??dollar
db$TRM<-dollar(db$TRM,prefix="$",big.mark=".",decimal.mark=",")
install.packages("scales")
library(scales)
db$TRM<-dollar(db$TRM,prefix="$",big.mark=".",decimal.mark=",")
db$TRM<-as.numeric(db$TRM)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$TRM<-dollar(db$TRM,prefix="$ ",big.mark=".",decimal.mark=",")
db$TRM<-dollar(db$TRM,prefix="$ ",big.mark=".",decimal.mark=",",scale=1)
db$TRM<-dollar_format(db$TRM,prefix="$ ",big.mark=".",decimal.mark=",",scale=1)
str(db)
db$TRM=gsub("\\$", "", db$TRM))
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub(".", "", db$TRM)
setwd("D:/Documents/GitHub/Trabajo2")
db <- read.csv2("Autos TRM.csv",header = TRUE,stringsAsFactors = FALSE)
db$TRM=gsub("\\$", "", db$TRM)
db$TRM=gsub("\\.", "", db$TRM)
db$TRM=gsub("\\,", ".", db$TRM)
db$TRM<-as.numeric(db$TRM)
str(TRM)
str(db$TRM)
View(db)
str(db)
db$TRM[1]-db$TRM[4]
attach(db)
detach
attach(db)
plot(Fecha,TRM)
plot(db$Fecha,db$TRM)
plot(TRM)
plot(db$TRM,db$Fecha)
str(db)
db$Fecha <- as.Date(db$Fecha, format = "%d/%m/%Y")
plot(db$Fecha,db$TRM)
points(db$Unidades)
plot(db$Fecha,db$TRM)
lines(db$Unidades)
plot(db$Fecha,db$Unidades)
pruebitalindaxd<-lm(Unidades~TRM, data=db)
summary(pruebitalindaxd)
db<-subset(db,db$Unidades!=0)
db<-subset(db,db$Unidades!=1)
db<-subset(db,db$Unidades!=2)
pruebitalindaxd<-lm(Unidades~TRM, data=db)
summary(pruebitalindaxd)
?festivoschibchombianos
install.packages("dplyr")
db%>% group_by(month=floor_date(date, "month")) %>%summarize(Unidades=sum(Unidades))
library(dplyr)
db%>% group_by(month=floor_date(date, "month")) %>%summarize(Unidades=sum(Unidades))
install.packages("lubridate")
library(lubridate)
db%>% group_by(month=floor_date(date, "month")) %>%summarize(Unidades=sum(Unidades))
ç
?dplyr
?dota2
??dota2
db%>% group_by(month=floor_date(date, "month")) %>%summarize(Unidades=sum(Unidades))
db%>% group_by(month=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades))
dbmeses<-db%>% group_by(month=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades))
View(dbmeses)
dbmeses<-db%>% group_by(Fecha=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades))
dbmeses<-db%>% group_by(Mes=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades))
dbmeses$Mes<-as.POSIXct.Date(dbmeses$Mes,format=(%Y-%m))
dbmeses$Mes<-as.POSIXct.Date(dbmeses$Mes,format="%Y-%m")
dbmeses<-db%>% group_by(Mes=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades))
dbmeses$Mes<-format(dbmeses$Mes,format="%Y-%m")
View(dbmeses)
googleaux<-read.csv2("multiTimeline (1).csv",header=T,sep=",")
View(googleaux)
dbmeses<-cbind2(dbmeses,googleaux$carro...Colombia.)
View(dbmeses)
View(dbmeses)
dbmeses<-db%>% group_by(Mes=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades)) %>% summarize(TRM=mean(TRM))
View(dbmeses)
View(dbmeses)
dbmeses<-db%>% group_by(Mes=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades))
View(dbmeses)
dbmeses<-db%>% group_by(Mes=floor_date(Fecha, "month")) %>%summarize(Unidades=sum(Unidades),TRM=mean(TRM))
View(dbmeses)
View(dbmeses)
dbmeses$Mes<-format(dbmeses$Mes,format="%Y-%m")
View(dbmeses)
googleaux<-read.csv2("multiTimeline (1).csv",header=T,sep=",")
dbmeses<-cbind2(dbmeses,googleaux$carro...Colombia.)
View(dbmeses)
names(dbmeses)[4]<-"Pop"
View(dbmeses)
names(dbmeses)[2]<-"Uni"
names(dbmeses)[2]<-"uni"
names(dbmeses)[4]<-"pop"
names(dbmeses)[1]<-"mes"
pruebitalindaxd<-lm(uni~TRM+pop,data=dbmeses)
summary(pruebitalindax)
summary(pruebitalindaxd)
pruebitalindaxd<-lm(uni~TRM,data=dbmeses)
summary(pruebitalindaxd)
pruebitalindaxd<-lm(uni~pop,data=dbmeses)
summary(pruebitalindaxd)
